items:
- id: What Is rm
  content: The `rm` tool deletes a specified file. It ensures that the file path is
    provided. The tool uses the `os.Remove` function to delete the file. If the operation
    is successful, it returns a confirmation message; otherwise, it returns an error.
  tags:
  - tools
  - details
  - rm
- id: What Is rename
  content: The `rename` tool renames or moves a file from one path to another. It
    ensures that both the old and new paths are specified. The tool uses the `os.Rename`
    function to perform the operation. If the operation is successful, it returns
    a confirmation message; otherwise, it returns an error.
  tags:
  - tools
  - details
  - rename
- id: What Is realpath
  content: The `realpath` tool resolves the absolute path of a specified path. It
    returns an error if the path is not specified. The tool uses the `filepath.Abs`
    function to resolve the path. The tool ensures that all necessary information
    is provided and handles any errors that may occur during the process.
  tags:
  - tools
  - details
  - realpath
- id: What Is dump
  content: The `dump` tool writes content to a file. It ensures that all parent directories
    are created if they don't exist. The tool returns an error if no file or content
    is specified. It also handles errors related to directory creation, file creation,
    and writing content. This tool is considered dangerous and should be used with
    caution to avoid losing part of the file.
  tags:
  - tools
  - details
  - dump
- id: What Is list
  content: The `list` tool reads a specified range of lines from a file and returns
    them along with statistics. It ensures the start line is greater than or equal
    to 1 and the end line is greater than or equal to the start line. The tool also
    handles errors such as missing file specifications or scanning errors. The statistics
    include the range of lines read and the total number of lines in the file.
  tags:
  - tools
  - details
  - list
- id: What Is ls
  content: The `ls` tool lists files in a directory. It returns information about
    each file, including its name, size, and permissions. If no directory is specified,
    it returns an error. The tool sorts the results alphabetically.
  tags:
  - tools
  - details
  - ls
- id: Default Git Branch Information
  content: The default branch for the Git repository is 'master'.
  tags:
  - git
  - branch
  - main
  - master
- id: Commit Message
  content: |-
    The topic should be one line, summary.
    The details should go in the body.
    Prefer conventional commits.
    Infer component from the content of the commit.
  tags:
  - todo
  - fix
  - commit
- id: Gena Library Information
  content: The Gena library is used to create dynamic, memory-assisted agents capable
    of processing user queries in a conversational manner. It facilitates interaction
    by managing memory, rendering markdown responses, and integrating with various
    tools for enhanced functionality.
  tags:
  - library
  - gena
  - project
  - information
- id: Project Gena Library Information
  content: This project is based on the Gena library. Gena is a library for managing
    state in applications and provides a way to implement reactive programming in
    a more structured manner.
  tags:
  - project
  - information
  - library
  - gena
- id: What Are Tools
  content: |
    Tools are OpenAI tool functions that can be used by agent to perform specific tasks.
  tags:
  - tools
  - details
  - pkg
- id: Tools List
  content: |
    tools:
    - memory
     - get
     - set
    - git
     - add
     - commit
     - diff
     - log
     - push
     - status
    - ls
    - list
    - dump
    - patch
    - rm
    - mv
    - httpget
  tags:
  - tools
  - directory
  - pkg
- id: User's Name
  content: User's name is Mark.
  tags:
  - user-info
  - greet
- id: Project Information
  content: |
    Project: commie
    Experiment on autonomous terminal environment for software development.
    Written in Go.
  tags:
  - project
  - information
  - commie
- id: Git Commit Style
  content: |
    Prefer Conventional Commits.
    Include issue number where possible.
    Infer it from branch.
    Include component if possible.
    Infe it from content of commit.
    Example: "feat(aboutRoute): ABC-123 improve parser"
  tags:
  - git
  - commit
  - style
  - guide
- id: user email
  content: markharnyk@gmail.com
  tags:
  - user-info
  - contact
