/* tslint:disable */
/* eslint-disable */
/**
 * Commie Plugin API
 * API for communication between Commie and plugins via CPCP (Commie Plugin Connectivity Protocol).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ToolCall } from './ToolCall';
import {
    ToolCallFromJSON,
    ToolCallFromJSONTyped,
    ToolCallToJSON,
    ToolCallToJSONTyped,
} from './ToolCall';

/**
 * 
 * @export
 * @interface RunToolsRequest
 */
export interface RunToolsRequest {
    /**
     * 
     * @type {Array<ToolCall>}
     * @memberof RunToolsRequest
     */
    toolCalls: Array<ToolCall>;
}

/**
 * Check if a given object implements the RunToolsRequest interface.
 */
export function instanceOfRunToolsRequest(value: object): value is RunToolsRequest {
    if (!('toolCalls' in value) || value['toolCalls'] === undefined) return false;
    return true;
}

export function RunToolsRequestFromJSON(json: any): RunToolsRequest {
    return RunToolsRequestFromJSONTyped(json, false);
}

export function RunToolsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RunToolsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'toolCalls': ((json['tool_calls'] as Array<any>).map(ToolCallFromJSON)),
    };
}

export function RunToolsRequestToJSON(json: any): RunToolsRequest {
    return RunToolsRequestToJSONTyped(json, false);
}

export function RunToolsRequestToJSONTyped(value?: RunToolsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tool_calls': ((value['toolCalls'] as Array<any>).map(ToolCallToJSON)),
    };
}

