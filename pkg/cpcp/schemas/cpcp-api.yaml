openapi: '3.0.3'
info:
  title: Commie Plugin API
  description: API for communication between Commie and plugins via CPCP (Commie Plugin Connectivity Protocol).
  version: "1.0.0"

paths:
  /manifest:
    post:
      summary: Retrieve plugin manifest
      operationId: getManifest
      responses:
        "200":
          description: Plugin information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PluginManifest"

  /run_command:
    post:
      summary: Execute a command
      operationId: runCommand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [command]
              properties:
                command:
                  type: string
                  description: Command name
      responses:
        "200":
          description: Generated prompt
          content:
            application/json:
              schema:
                type: object
                required: [prompt]
                properties:
                  prompt:
                    type: string
                    description: System prompt generated by the command

  /run_tools:
    post:
      summary: Execute multiple tools in parallel
      operationId: runTools
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [tool_calls]
              properties:
                tool_calls:
                  type: array
                  items:
                    $ref: "#/components/schemas/ToolCall"
      responses:
        "200":
          description: Tool execution results
          content:
            application/json:
              schema:
                type: object
                required: [tool_outputs]
                properties:
                  tool_outputs:
                    type: array
                    items:
                      $ref: "#/components/schemas/ToolOutput"

  /get_system_prompt:
    post:
      summary: Retrieve the system prompt of the plugin
      operationId: getSystemPrompt
      responses:
        "200":
          description: System prompt
          content:
            application/json:
              schema:
                type: object
                properties:
                  system_prompt:
                    type: string
                    nullable: true
                    description: Optional system prompt provided by the plugin

components:
  schemas:
    PluginManifest:
      type: object
      required: [name, description, version, commands, tools]
      properties:
        name:
          type: string
          description: Plugin name
        description:
          type: string
          description: Plugin description
        version:
          type: string
          description: Plugin version
        repository:
          type: string
          format: uri
          description: Repository URL (if available)
        website:
          type: string
          format: uri
          description: Plugin website (if available)
        commands:
          type: array
          description: List of available command names
          items:
            type: string
        tools:
          type: array
          description: Full tool manifests (similar to OpenAI API)
          items:
            $ref: "#/components/schemas/ToolManifest"
        system_prompt:
          type: string
          nullable: true
          description: Plugin-specific system prompt

    ToolManifest:
      type: object
      required: [name, description, parameters]
      properties:
        name:
          type: string
          description: Tool name
        description:
          type: string
          description: Tool description
        parameters:
          type: object
          additionalProperties: true
          description: Description of input parameters (similar to OpenAI API)

    ToolCall:
      type: object
      required: [tool_name, parameters]
      properties:
        tool_name:
          type: string
          description: Name of the tool to invoke
        parameters:
          type: object
          additionalProperties: true
          description: Input parameters for the tool

    ToolOutput:
      type: object
      required: [tool_name, result]
      properties:
        tool_name:
          type: string
          description: Name of the executed tool
        result:
          type: object
          additionalProperties: true
          description: Tool execution results
